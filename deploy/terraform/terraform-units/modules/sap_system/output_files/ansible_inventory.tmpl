[iscsi]
%{~ for ip_iscsi in ips_iscsi }
%{~ if iscsi.authentication.type == "key" }
${ip_iscsi}  ansible_connection=ssh  ansible_user=${iscsi.authentication.username}
%{~ endif }
%{~ if iscsi.authentication.type == "password" }
${ip_iscsi}  ansible_connection=ssh  ansible_user=${iscsi.authentication.username} ansible_ssh_pass=${iscsi.authentication.password}  ansible_become_pass=${iscsi.authentication.password}
%{~ endif }
%{~ endfor }

[jumpboxes_windows]
%{~ for jumpbox-windows in jumpboxes-windows }
${ips_jumpboxes_windows[index(jumpboxes-windows, jumpbox-windows)]}  ansible_connection=winrm  ansible_user=${jumpbox-windows.authentication.username} ansible_ssh_pass=${jumpbox-windows.authentication.password}  ansible_ssh_port=5986 ansible_winrm_transport=ntlm ansible_winrm_server_cert_validation=ignore
%{~ endfor }

[jumpboxes_linux]
%{~ for jumpbox-linux in jumpboxes-linux }
%{~ if jumpbox-linux.destroy_after_deploy != "true" && jumpbox-linux.authentication.type == "key" }
${ips_jumpboxes_linux[index(jumpboxes-linux, jumpbox-linux)]}  ansible_connection=ssh  ansible_user=${jumpbox-linux.authentication.username}
%{~ endif }
%{~ if jumpbox-linux.destroy_after_deploy != "true" && jumpbox-linux.authentication.type == "password" }
${ips_jumpboxes_linux[index(jumpboxes-linux, jumpbox-linux)]}  ansible_connection=ssh  ansible_user=${jumpbox-linux.authentication.username}  ansible_ssh_pass=${jumpbox-linux.authentication.password}  ansible_become_pass=${jumpbox-linux.authentication.password}
%{~ endif }
%{~ endfor }

[all_jumpboxes]
%{~ for jumpbox-windows in jumpboxes-windows }
${ips_jumpboxes_windows[index(jumpboxes-windows, jumpbox-windows)]}  ansible_connection=winrm  ansible_user=${jumpbox-windows.authentication.username} ansible_ssh_pass=${jumpbox-windows.authentication.password}  ansible_ssh_port=5986
%{~ endfor }
%{~ for jumpbox-linux in jumpboxes-linux }
%{~ if jumpbox-linux.destroy_after_deploy != "true" && jumpbox-linux.authentication.type == "key" }
${ips_jumpboxes_linux[index(jumpboxes-linux, jumpbox-linux)]}  ansible_connection=ssh  ansible_user=${jumpbox-linux.authentication.username}
%{~ endif }
%{~ if jumpbox-linux.destroy_after_deploy != "true" && jumpbox-linux.authentication.type == "password" }
${ips_jumpboxes_linux[index(jumpboxes-linux, jumpbox-linux)]}  ansible_connection=ssh  ansible_user=${jumpbox-linux.authentication.username}  ansible_ssh_pass=${jumpbox-linux.authentication.password}  ansible_become_pass=${jumpbox-linux.authentication.password}
%{~ endif }
%{~ endfor }

[all_linux_servers]
%{~ for jumpbox-linux in jumpboxes-linux }
%{~ if jumpbox-linux.destroy_after_deploy != "true" && jumpbox-linux.authentication.type == "key" }
${ips_jumpboxes_linux[index(jumpboxes-linux, jumpbox-linux)]}  ansible_connection=ssh  ansible_user=${jumpbox-linux.authentication.username}
%{~ endif }
%{~ if jumpbox-linux.destroy_after_deploy != "true" && jumpbox-linux.authentication.type == "password" }
${ips_jumpboxes_linux[index(jumpboxes-linux, jumpbox-linux)]}  ansible_connection=ssh  ansible_user=${jumpbox-linux.authentication.username}  ansible_ssh_pass=${jumpbox-linux.authentication.password}  ansible_become_pass=${jumpbox-linux.authentication.password}
%{~ endif }
%{~ endfor }
%{~ for ip_dbnode-admin in ips_dbnodes_admin }
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.type == "key" }
${ip_dbnode-admin}  ansible_connection=ssh  ansible_user=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.username}
%{~ endif }
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.type == "password" }
${ip_dbnode-admin}  ansible_connection=ssh  ansible_user=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.username}  ansible_ssh_pass=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.password}  ansible_become_pass=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.password}
%{~ endif }
%{~ endfor }
%{~ for ip_scs in ips_scs }
${ip_scs}  ansible_connection=ssh ansible_user=${application.authentication.username}
%{~ endfor }
%{ for ip_app in ips_app }
${ip_app}  ansible_connection=ssh ansible_user=${application.authentication.username}
%{~ endfor }
%{ for ip_web in ips_web }
${ip_web}  ansible_connection=ssh ansible_user=${application.authentication.username}
%{~ endfor }

[hanadbnodes]
%{~ for ip_dbnode-admin in ips_dbnodes_admin }
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.type == "key" }
${ip_dbnode-admin}  ansible_connection=ssh  ansible_user=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.username}
%{~ endif }
%{~ if dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.type == "password" }
${ip_dbnode-admin}  ansible_connection=ssh  ansible_user=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.username}  ansible_ssh_pass=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.password}  ansible_become_pass=${dbnodes[index(ips_dbnodes_admin, ip_dbnode-admin)].authentication.password}
%{~ endif }
%{~ endfor }

[scs]
%{~ for ip-scs in ips_scs }
${ip-scs}  ansible_connection=ssh ansible_user=${application.authentication.username}
%{~ if application.authentication.type == "password" }
${ip-scs}  ansible_connection=ssh  ansible_user=${application.authentication.username}  ansible_ssh_pass=${application.authentication.password}  ansible_become_pass=${application.authentication.password}
%{~ endif }
%{~ endfor }

[app]
%{~ for ip-app in ips_app }
${ip-app}  ansible_connection=ssh ansible_user=${application.authentication.username}
%{~ if application.authentication.type == "password" }
${ip-app}  ansible_connection=ssh  ansible_user=${application.authentication.username}  ansible_ssh_pass=${application.authentication.password}  ansible_become_pass=${application.authentication.password}
%{~ endif }
%{~ endfor }

[web]
%{~ for ip-web in ips_web }
${ip-web}  ansible_connection=ssh ansible_user=${application.authentication.username}
%{~ if application.authentication.type == "password" }
${ip-web}  ansible_connection=ssh  ansible_user=${application.authentication.username}  ansible_ssh_pass=${application.authentication.password}  ansible_become_pass=${application.authentication.password}
%{~ endif }
%{~ endfor }

[ase]
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "ASE" }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
${ips_anydbnode}  ansible_connection=ssh  ansible_user=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
${ips_anydbnode}  ansible_connection=ssh  ansible_user=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}  ansible_ssh_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}  ansible_become_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}
%{~ endif }
%{~ endif }
%{~ endfor }

[oracle]
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "ORACLE" }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
${ips_anydbnode}  ansible_connection=ssh  ansible_user=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
${ips_anydbnode}  ansible_connection=ssh  ansible_user=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}  ansible_ssh_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}  ansible_become_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}
%{~ endif }
%{~ endif }
%{~ endfor }

[db2]
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "DB2" }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "key" }
${ips_anydbnode}  ansible_connection=ssh  ansible_user=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}
%{~ endif }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.type == "password" }
${ips_anydbnode}  ansible_connection=ssh  ansible_user=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}  ansible_ssh_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}  ansible_become_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}
%{~ endif }
%{~ endif }
%{~ endfor }

[sqlserver]
%{~ for ips_anydbnode in ips_anydbnodes }
%{~ if anydbnodes[index(ips_anydbnodes, ips_anydbnode)].platform == "SQLSERVER" }
${ips_anydbnode}  ansible_connection=winrm  ansible_user=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.username}  ansible_ssh_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}  ansible_become_pass=${anydbnodes[index(ips_anydbnodes, ips_anydbnode)].authentication.password}
%{~ endif }
%{~ endfor }

